{"version":3,"sources":["components/Persons.js","services/PhonebookService.js","components/NewPerson.js","components/Search.js","components/Notification.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","Persons","persons","search","length","filter","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","post","id","delete","put","NewPerson","setPersons","showMessage","useState","newName","setNewName","newPhone","setNewPhone","handleUpdate","window","confirm","phonebookService","updated","p","message","error","catch","onSubmit","event","preventDefault","find","undefined","concat","value","onChange","target","type","Search","handleSearch","Notification","notification","className","App","setNotification","useEffect","records","setSearch","displayNotification","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"+NAmBMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACtB,OACI,2BACKD,EAAOE,KADZ,IACmBF,EAAOG,OAAQ,IAC9B,4BAAQC,QAASH,GAAjB,YAKGI,EA1BC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQN,EAAmB,EAAnBA,aAChC,OAAuB,IAAnBK,EAAQE,OACD,6DAEAF,EACFG,OAAO,SAAAT,GAAM,OACVA,EAAOE,KAAKQ,cAAcC,SAASJ,EAAOG,iBAE7CE,IAAI,SAAAZ,GAAM,OACP,kBAAC,EAAD,CACIA,OAAQA,EACRC,aAAc,kBAAMA,EAAaD,IACjCa,IAAKb,EAAOE,U,wBCZ1BY,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB9B,EAfA,SAAAnB,GAEX,OADgBe,IAAMK,KAAKN,EAASd,GACrBiB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa9B,EAVM,SAAAE,GACjB,OAAON,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BO,KASvB,EANA,SAAArB,GACX,OAAOe,IACFQ,IADE,UACKT,EADL,YACgBd,EAAOqB,IAAMrB,GAC/BiB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,Q,4NClBnC,IAqEeK,EArEG,SAAC,GAA0C,IAAxClB,EAAuC,EAAvCA,QAASmB,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAAkB,EAC1BC,mBAAS,IADiB,mBACjDC,EADiD,KACxCC,EADwC,OAExBF,mBAAS,IAFe,mBAEjDG,EAFiD,KAEvCC,EAFuC,KAWlDC,EAAe,SAAAhC,GAEbiC,OAAOC,QAAP,UACOlC,EAAOE,KADd,4DACsE4B,EADtE,OAIAK,E,qVAAA,IACiBnC,EADjB,CACyBG,OAAQ2B,KAC5Bb,KAAK,SAAAmB,GACFX,EACInB,EAAQM,IAAI,SAAAyB,GAAC,OAAKA,EAAEhB,KAAOe,EAAQf,GAAKe,EAAUC,KAEtDX,EAAY,CACRY,QAAQ,aAAD,OAAeF,EAAQlC,KAAvB,iBACPqC,OAAO,MAGdC,MAAM,SAAAD,GACHb,EAAY,CACRY,QAAQ,kBAAD,OAAoBtC,EAAOE,KAA3B,qCACPqC,OAAO,OAuB3B,OACI,0BAAME,SAlBW,SAAAC,GACjBA,EAAMC,iBACN,IAAM3C,EAASM,EAAQsC,KAAK,SAAAP,GAAC,OAAIA,EAAEnC,OAAS0B,SAC7BiB,IAAX7C,EACAgC,EAAahC,GAEbmC,EACY,CAAEjC,KAAM0B,EAASzB,OAAQ2B,IAChCb,KAAK,SAAAoB,GACFZ,EAAWnB,EAAQwC,OAAOT,IAC1BR,EAAW,IACXE,EAAY,IACZL,EAAY,CAAEY,QAAQ,GAAD,OAAKD,EAAEnC,KAAP,WAAsBqC,OAAO,QAO1D,sCACU,2BAAOQ,MAAOnB,EAASoB,SArDnB,SAAAN,GAClBb,EAAWa,EAAMO,OAAOF,WAsDpB,uCACW,2BAAOA,MAAOjB,EAAUkB,SArDpB,SAAAN,GACnBX,EAAYW,EAAMO,OAAOF,WAsDrB,6BACI,4BAAQG,KAAK,UAAb,UCvDDC,EATA,SAAC,GAA8B,IAA5B5C,EAA2B,EAA3BA,OAAQ6C,EAAmB,EAAnBA,aACtB,OACI,oCACK,cACD,2BAAOL,MAAOxC,EAAQyC,SAAUI,MCQ7BC,EAZM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OAAqB,OAAjBA,EACO,KAIP,yBAAKC,UAAWD,EAAaf,MAAQ,QAAU,WAC1Ce,EAAahB,UC4DXkB,EA9DH,WAAO,IAAD,EACgB7B,mBAAS,IADzB,mBACPrB,EADO,KACEmB,EADF,OAE0BE,mBAAS,MAFnC,mBAEP2B,EAFO,KAEOG,EAFP,KAIdC,oBAAU,WACNvB,IAA0BlB,KAAK,SAAA0C,GAAO,OAAIlC,EAAWkC,MACtD,IANW,MAQchC,mBAAS,IARvB,mBAQPpB,EARO,KAQCqD,EARD,KAkCRC,EAAsB,SAAAP,GACxBG,EAAgBH,GAChBQ,WAAW,WACPL,EAAgB,OACjB,MAGP,OACI,6BACI,yCACA,kBAAC,EAAD,CAAcH,aAAcA,IAC5B,kBAAC,EAAD,CAAQ/C,OAAQA,EAAQ6C,aAnCX,SAAAV,GACjBkB,EAAUlB,EAAMO,OAAOF,UAmCnB,yCACA,kBAAC,EAAD,CACIzC,QAASA,EACTmB,WAAYA,EACZC,YAAamC,IAEjB,uCACA,kBAAC,EAAD,CACIvD,QAASA,EACTC,OAAQA,EACRN,aA1CS,SAAAD,GACbiC,OAAOC,QAAP,iBAAyBlC,EAAOE,KAAhC,QACAiC,EACkBnC,EAAOqB,IACpBJ,KAAK,SAAAC,GACF2C,EAAoB,CAChBvB,QAAQ,GAAD,OAAKtC,EAAOE,KAAZ,yCACPqC,OAAO,MAGdC,MAAM,SAAAD,GACHsB,EAAoB,CAChBvB,QAAQ,kBAAD,OAAoBtC,EAAOE,KAA3B,qCACPqC,OAAO,MAGnBd,EAAWnB,EAAQG,OAAO,SAAA4B,GAAC,OAAIA,EAAEhB,KAAOrB,EAAOqB,YChC3D0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a697fe7a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Persons = ({ persons, search, handleDelete }) => {\r\n    if (persons.length === 0) {\r\n        return <div>Nothing in phonebook so far.</div>;\r\n    } else\r\n        return persons\r\n            .filter(person =>\r\n                person.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n            .map(person => (\r\n                <Person\r\n                    person={person}\r\n                    handleDelete={() => handleDelete(person)}\r\n                    key={person.name}\r\n                />\r\n            ));\r\n};\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n    return (\r\n        <p>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={handleDelete}>delete</button>\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = person => {\r\n    const request = axios.post(baseUrl, person);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = person => {\r\n    return axios\r\n        .put(`${baseUrl}/${person.id}`, person)\r\n        .then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, deletePerson, update };\r\n","import React, { useState } from \"react\";\r\nimport phonebookService from \"../services/PhonebookService\";\r\n\r\nconst NewPerson = ({ persons, setPersons, showMessage }) => {\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newPhone, setNewPhone] = useState(\"\");\r\n\r\n    const handleNewName = event => {\r\n        setNewName(event.target.value);\r\n    };\r\n    const handleNewPhone = event => {\r\n        setNewPhone(event.target.value);\r\n    };\r\n\r\n    const handleUpdate = person => {\r\n        if (\r\n            window.confirm(\r\n                `${person.name} is already in phonebook, update old number with ${newPhone}?`\r\n            )\r\n        ) {\r\n            phonebookService\r\n                .update({ ...person, number: newPhone })\r\n                .then(updated => {\r\n                    setPersons(\r\n                        persons.map(p => (p.id === updated.id ? updated : p))\r\n                    );\r\n                    showMessage({\r\n                        message: `Number of ${updated.name} was updated.`,\r\n                        error: false\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    showMessage({\r\n                        message: `Information of ${person.name} was already deleted from server.`,\r\n                        error: true\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const person = persons.find(p => p.name === newName);\r\n        if (person !== undefined) {\r\n            handleUpdate(person);\r\n        } else {\r\n            phonebookService\r\n                .create({ name: newName, number: newPhone })\r\n                .then(p => {\r\n                    setPersons(persons.concat(p));\r\n                    setNewName(\"\");\r\n                    setNewPhone(\"\");\r\n                    showMessage({ message: `${p.name} added.`, error: false });\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNewName} />\r\n            </div>\r\n            <div>\r\n                phone: <input value={newPhone} onChange={handleNewPhone} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NewPerson;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ search, handleSearch }) => {\r\n    return (\r\n        <>\r\n            {\"filter with\"}\r\n            <input value={search} onChange={handleSearch} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={notification.error ? \"error\" : \"success\"}>\r\n            {notification.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport NewPerson from \"./components/NewPerson\";\r\nimport Search from \"./components/Search\";\r\nimport Notification from \"./components/Notification\";\r\nimport phonebookService from \"./services/PhonebookService\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [notification, setNotification] = useState(null);\r\n\r\n    useEffect(() => {\r\n        phonebookService.getAll().then(records => setPersons(records));\r\n    }, []);\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const handleSearch = event => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleDelete = person => {\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            phonebookService\r\n                .deletePerson(person.id)\r\n                .then(response => {\r\n                    displayNotification({\r\n                        message: `${person.name} was sucessfully deleted from server.`,\r\n                        error: false\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    displayNotification({\r\n                        message: `Information of ${person.name} was already deleted from server.`,\r\n                        error: true\r\n                    });\r\n                });\r\n            setPersons(persons.filter(p => p.id !== person.id));\r\n        }\r\n    };\r\n\r\n    const displayNotification = notification => {\r\n        setNotification(notification);\r\n        setTimeout(() => {\r\n            setNotification(null);\r\n        }, 5000);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification notification={notification} />\r\n            <Search search={search} handleSearch={handleSearch} />\r\n            <h2>add a new</h2>\r\n            <NewPerson\r\n                persons={persons}\r\n                setPersons={setPersons}\r\n                showMessage={displayNotification}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                persons={persons}\r\n                search={search}\r\n                handleDelete={handleDelete}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}